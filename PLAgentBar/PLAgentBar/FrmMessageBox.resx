<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADrWlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBSaWdodHM9Imh0dHA6Ly9ucy5hZG9i
        ZS5jb20veGFwLzEuMC9yaWdodHMvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAv
        MS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNv
        dXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1wUmlnaHRz
        Ok1hcmtlZD0iRmFsc2UiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0idXVpZDo3MENCQkQ2MUU4MzFE
        RjExOUIyMkZCQkEwMTdBMERFOSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpFOTFEOUJGODg0MzQx
        MUUwOTU0NDk2MzY1RjMxRDk2MyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpFOTFEOUJGNzg0MzQx
        MUUwOTU0NDk2MzY1RjMxRDk2MyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdp
        bmRvd3MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpBMjU0NjFB
        RDJGODRFMDExODVGQkE5MjU0NTFEMjk2QiIgc3RSZWY6ZG9jdW1lbnRJRD0idXVpZDo3MENCQkQ2MUU4
        MzFERjExOUIyMkZCQkEwMTdBMERFOSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6
        eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PooyfPoAAAjcSURBVFhHxZdpUFRnFobxl6jj1FRpMVX+
        cBLLOBaKIIioIAoOiOxrA7IqgqAILqgoxrhgZsYKRtGI4lYuo4MzYkYEAeluaOimaeiFHVm6mwFxwSUY
        JNHSvHPOJXSkxKmk8iO36rGu9zvnfd/vu/d+tzED8Jsi/OPn52fC39/fLCAgwCwoKEggODhYICQkxJyY
        SbgSImINEf8jfM7XeIxrzEf6RnRYk7Xf9fq5AX5HOEZFRa07fPhwVklJSVlLS0un0Wj8pre39w3D583N
        zZ3FxcVlXMO13MO9vybAOGJebGxswqVLly63t7f3kRE6OzvR0dExJjxmMBhw7969vosXL16OiYlJYA3W
        +qUBxgcGBrplZGQcpJkZu7q6WBSy6lacuNKI5EM6iNI08EhSC/A5X+MxruFaDtPY2GjcvXv3QdZizZ8b
        YDwVe586dSqXRAZbW1tRoWjCji+08NmkQ+ReAzZnP8ee898h8+pbgYxzQ0g99hQRnxqEGq7lHu6lMIMn
        T57MZU3WftdrrADjqMg9Jycnl5b0e5oBzuZp4Z+qxtrMHnx64RV2nh7CxqzniN53H6J0PYJ3dJJxNxIP
        P8H2nEHsOjNEY93wo56zeTo0NTWira31++PHj+eyNnuM+JkC+Pj4CPj6+lrv3Lkzs62tbVCn0yLrnBqe
        GzUk/AJpJ19gzcGHCNnRgb9fMELV+A2eDrzGq9c/QN87hOslD7F61z3EHnhAq/EcKUefYhX1Zp1Xo6Gh
        noMMbt+elskeI36mAF5eXmbe3t6Tw8PDk7RarVGjUSPnigoeG9Q042+R8LdHCM/oRthuI87c6KaWsY/u
        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
</value>
  </data>
</root>