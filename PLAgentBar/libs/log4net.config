<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler" />
  </configSections>
  <appSettings>
    <add key="serverIP" value="192.17.1.63" />
    <add key="port" value="2001" />
    <add key="extenMode" value="cold" />
    <add key="bindExten" value="no" />     
    
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <log4net>
    <!--定义输出到文件中-->
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <param name="File" value="${APPDATA}\\CTIClient\\LogData" />
      <!--是否允许追加-->
      <appendToFile value="true" />
      <param name="MaxSizeRollBackups" value="3"/>
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false" />
      <param name="MaximumFileSize" value="10KB" />
      <!--当文件超过MaximumFileSize的大小时，如果要创建新的文件来存储日志，会根据CountDirection的值来重命名文件。大于-1的值时，file里指定的文件名会依次加上.0,.1,.2递增。当等于或小于-1时，创建依赖于MaxSizeRollBackups参数值，创建备份日志数。-->
      <param name="CountDirection" value="1"/>
      <!--起始日志级别，低于此级别的日志不会被记录。-->
      <param name="Threshold" value="ALL"></param>
      <!-- RollingStyle Composite 综合  Size 按大小  Date 按时间 -->
			<param name="RollingStyle" value="Composite" />
      <!--最小锁定模型以允许多个进程可以写入同一个文件-->
      <param name="lockingModel"  type="log4net.Appender.FileAppender+MinimalLock" />
      <param name="DatePattern" value="&quot;Logs_&quot;yyyyMMdd&quot;&quot;" />
      <!--<param name="DatePattern" value="yyyy-MM-dd.LOG" />-->
      <layout type="log4net.Layout.PatternLayout">
        <!--每条日志末尾的文字说明-->
        <footer value="" />
        <!--输出格式-->
        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <conversionPattern value="[%date] Row:[%5L] Thread_ID:[%thread] Log_level:%-5level Class:%logger property:[%property{NDC}] - Info:%message%newline" />
      </layout>
    <!--过滤器，只需要min和max之间的级别-->
    <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG"/>
        <param name="LevelMax" value="ERROR"/>
    </filter>
    </appender>
    <!--按日志容量分割日志文件 10KB一个-->
		<appender name="LogFileAppenderBySize" type="log4net.Appender.RollingFileAppender" >
		<!--是否续写-->
		<param name="AppendToFile" value="true" />
		<!--最小锁定模型以允许多个进程可以写入同一个文件-->
		<param name="LockingModel" value="log4net.Appender.FileAppender.MinimalLock" />
		<param name="StaticLogFileName" value="false" />
		<param name="File" value="${APPDATA}\\CTIClient\\LogData\\Logs.txt" />

		<!--按照文件的大小进行变换日志文件-->
		<param name="RollingStyle" value="Size" />
		<!--单个文件最大数量 好像只有在 RollingStyle=Size分割时有效-->
		<param name="MaximumFileSize" value="30MB"/>
		<param name="Threshold" value="ALL"></param>
		<!--保留的log文件数量 超过此数量后 自动删除之前的 好像只有在 按Size分割时有效-->
		<param name="MaxSizeRollBackups" value="10" />
		
		<layout type="log4net.Layout.PatternLayout">
		<param name="ConversionPattern" value="[%date] Row:[%5L] Thread_ID:[%thread] Log_level:%-5level Class:%logger property:[%property{NDC}] - Info:%message%newline" />
		</layout>
		</appender>


    <!--定义输出到控制台命令行中-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <!--定义输出到windows事件中-->
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <!--定义输出到数据库中，这里举例输出到Access数据库中，数据库为C盘的log4net.mdb-->
    <appender name="AdoNetAppender_Access" type="log4net.Appender.AdoNetAppender">
      <connectionString value="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:log4net.mdb" />
      <commandText value="INSERT INTO LogDetails ([LogDate],[Thread],[Level],[Logger],[Message]) VALUES (@logDate, @thread, @logLevel, @logger,@message)" />
      <!--定义各个参数-->
      <parameter>
        <parameterName value="@logDate" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logLevel" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
    </appender>
    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
      <!--文件形式记录日志-->
      <appender-ref ref="LogFileAppenderBySize" />
      <!--控制台控制显示日志-->
      <appender-ref ref="ConsoleAppender" />
      
 
      <!--Windows事件日志
      <appender-ref ref="EventLogAppender" />
      -->
      
      <!-- 如果不启用相应的日志记录，可以通过这种方式注释掉
      <appender-ref ref="AdoNetAppender_Access" />
      -->
    </root>
  </log4net>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>